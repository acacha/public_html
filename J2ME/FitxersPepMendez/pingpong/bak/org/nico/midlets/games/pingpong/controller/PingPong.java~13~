package org.nico.midlets.games.pingpong.controller;

import javax.microedition.lcdui.Display;
import javax.microedition.midlet.MIDlet;
import javax.microedition.media.Player;
import javax.microedition.media.Manager;
import javax.microedition.media.protocol.DataSource;
import java.io.InputStream;
import javax.microedition.media.control.ToneControl;
import java.io.IOException;
import javax.microedition.media.MediaException;
import org.nico.midlets.games.pingpong.view.*;
import org.nico.midlets.multimedia.PlayMelodyThread;
import org.nico.midlets.multimedia.PlayThread;
import org.nico.midlets.games.pingpong.interfaces.IPingPongConstants;

/**
 * <p>Title: Ping Pong Game </p>
 * <p>Description: Ping pong interactivo para dispositivos moviles</p>
 * <p>Comments: CLDL 1.1 MIDP 2.0</p>
 * <p>Media Supported Protocols: device, http, file and capture</p>
 * <p>Supported Content Type: audio/x-tone-seq, audio/x-wav, audio/midi, audio/sp_midi, image/gif, video/mpeg and video/vnd.sun.rgb565
 * <p>Date: 12/03/06 </p>
 * @author Pep Mendez
 * @version 1.0
 */
public class PingPong
    extends MIDlet implements IPingPongConstants {
  private static PingPong instance;
  private Display display = null;
  private PingPongDisplay displayable = null;
  private final boolean VERSION_FINAL = false;

  public PingPong() {
    instance = this;
  }

  public void startApp() {
    if (displayable == null) {
      display = Display.getDisplay(this);
      displayable = new PingPongDisplay(true);
      new PingPongSplash(display, displayable);
    }
    new Thread(new PlayThread(PING_PONG_GAME_URL)).start();
    if (VERSION_FINAL) {
      // toca melodia, del libro j2me java 2 micro edition completa
      new Thread(new PlayMelodyThread(MELODIA_COMPLETA)).start();
    }
    else {
      // toca melodia, del libro j2me java 2 micro edition reducida
      new Thread(new PlayMelodyThread(MELODIA_CORTA)).start();
    }

  }

public void pauseApp() {
}

public void destroyApp(boolean unconditional) {
}

public static void quitApp() {
  instance.destroyApp(true);
  instance.notifyDestroyed();
  instance = null;
}

public static PingPong getInstance() {
  return instance;
}

}
